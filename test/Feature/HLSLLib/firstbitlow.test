#--- source.hlsl

StructuredBuffer<uint4> In : register(t0);
RWStructuredBuffer<uint4> Out : register(u1);

[numthreads(1,1,1)]
void main() {
  Out[0] = firstbitlow(In[0]);
  Out[1].xyz = firstbitlow(In[0].xyz);
  Out[1].w = firstbitlow(In[0].w);
  Out[2].xy = firstbitlow(In[0].xy);
}

//--- pipeline.yaml

---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]
Buffers:
  - Name: In
    Format: Hex32
    Stride: 16
    Data: [
      0x00000000, 
      0x000000E8, 
      0x80000000, 
      0xFFFFFFFF, 
    ]
  - Name: Out
    Format: Int32
    Stride: 16
    ZeroInitSize: 48
  - Name: ExpectedOut # The result we expect
    Format: Int32
    Stride: 16
    Data: [-1, 3, 31, 0, -1, 3, 31, 0, -1, 3, 0, 0] # Last two are filler
Results:
  - Result: Test1
    Rule: BufferExact
    Actual: Out
    Expected: ExpectedOut
DescriptorSets:
  - Resources:
    - Name: In
      Kind: StructuredBuffer
      DirectXBinding:
        Register: 0
        Space: 0
      VulkanBinding:
        Binding: 0
    - Name: Out
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# UNSUPPORTED: Clang
# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_5 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
